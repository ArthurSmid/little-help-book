@*@page "/places/cat/{CatId}"*@
@page "/places/sub/{SubId}"
@inject ClientCache cache
@inject IJSRuntime JSRuntime;

@if (places == null)
{
    <RadzenCard style="width: 100%">
        <i>Loading...</i>
    </RadzenCard>

}
else
{
    <RadzenDataList WrapItems="true" AllowPaging="true" Data="@places" TItem="Place">
        <Template Context="place">
            <PlaceCard Place="place" />
        </Template>
    </RadzenDataList>

}


@code {

    [Parameter]
    public string SubId { get; set; }

    //[Parameter]
    //public string CatId { get; set; }

    private List<Place> places;


    protected override async Task OnInitializedAsync()
    {
        //if (CatId?.Length>0)
        //{
        //    places = await cache.GetPlacesByCat(CatId);
        //    return;
        //}
        if (SubId?.Length>0)
        {
            places = await cache.GetPlacesBySub(SubId);
            return;
        }
    }

}
